function Utils.setRandVal 0
push argument 0
pop static 0
push constant 0
return
function Utils.getRandVal 0
push static 0
return
function Utils.decToBin 2
push constant 16
call Array.new 1
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push argument 0
push constant 0
gt
not
if-goto WHILE_END0
push local 1
push local 0
add
push argument 0
push constant 2
call Utils.mod 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 2
call Math.divide 2
pop argument 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Utils.binToDec 2
push constant 0
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push constant 16
lt
not
if-goto WHILE_END0
push local 0
push local 1
push argument 0
add
pop pointer 1
push that 0
push constant 2
push local 1
call Utils.power 2
call Math.multiply 2
add
pop local 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Utils.shiftLeft 2
push constant 16
call String.new 1
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push constant 16
lt
not
if-goto WHILE_END0
push local 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END0
label IF_FALSE0
push local 1
push local 0
add
push local 1
push constant 1
sub
push argument 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Utils.xor 0
push argument 0
push argument 1
not
and
push argument 0
not
push argument 1
and
or
return
function Utils.rand 4
push constant 16807
pop local 0
push constant 32749
pop local 2
push local 0
push static 0
call Math.multiply 2
call Math.abs 1
push local 2
call Utils.mod 2
pop local 3
label WHILE_EXP0
push local 3
push constant 0
lt
push local 3
push argument 0
gt
or
not
if-goto WHILE_END0
push local 0
push local 3
call Math.multiply 2
call Math.abs 1
push local 2
call Utils.mod 2
pop local 3
goto WHILE_EXP0
label WHILE_END0
push local 3
call Utils.setRandVal 1
pop temp 0
push local 3
return
function Utils.intArrayToString 4
push constant 16
call String.new 1
pop local 0
push constant 1
call String.new 1
pop local 2
push constant 15
pop local 1
label WHILE_EXP0
push local 1
push constant 1
neg
gt
not
if-goto WHILE_END0
push local 2
push local 1
push argument 0
add
pop pointer 1
push that 0
call String.setInt 2
pop temp 0
push local 2
push constant 0
call String.charAt 2
pop local 3
push local 0
push local 3
call String.appendChar 2
pop temp 0
push local 1
push constant 1
sub
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 2
call String.dispose 1
pop temp 0
push local 0
return
function Utils.mod 0
push argument 0
push argument 0
push argument 1
call Math.divide 2
push argument 1
call Math.multiply 2
sub
return
function Utils.power 0
push argument 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
return
goto IF_END0
label IF_FALSE0
push argument 0
push argument 0
push argument 1
push constant 1
sub
call Utils.power 2
call Math.multiply 2
return
label IF_END0
